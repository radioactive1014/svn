/* Auto-generated by genmsg_cpp for file /home/intelligentrobotics/ws/orocos/rokon_commander/srv/set_jnt_torques.srv */
#ifndef ROKON_COMMANDER_SERVICE_SET_JNT_TORQUES_H
#define ROKON_COMMANDER_SERVICE_SET_JNT_TORQUES_H
#include <string>
#include <vector>
#include <map>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/time.h"

#include "ros/macros.h"

#include "ros/assert.h"

#include "ros/service_traits.h"




namespace rokon_commander
{
template <class ContainerAllocator>
struct set_jnt_torquesRequest_ {
  typedef set_jnt_torquesRequest_<ContainerAllocator> Type;

  set_jnt_torquesRequest_()
  : torques()
  {
    torques.assign(0.0);
  }

  set_jnt_torquesRequest_(const ContainerAllocator& _alloc)
  : torques()
  {
    torques.assign(0.0);
  }

  typedef boost::array<double, 7>  _torques_type;
  boost::array<double, 7>  torques;


  typedef boost::shared_ptr< ::rokon_commander::set_jnt_torquesRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::rokon_commander::set_jnt_torquesRequest_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct set_jnt_torquesRequest
typedef  ::rokon_commander::set_jnt_torquesRequest_<std::allocator<void> > set_jnt_torquesRequest;

typedef boost::shared_ptr< ::rokon_commander::set_jnt_torquesRequest> set_jnt_torquesRequestPtr;
typedef boost::shared_ptr< ::rokon_commander::set_jnt_torquesRequest const> set_jnt_torquesRequestConstPtr;



template <class ContainerAllocator>
struct set_jnt_torquesResponse_ {
  typedef set_jnt_torquesResponse_<ContainerAllocator> Type;

  set_jnt_torquesResponse_()
  {
  }

  set_jnt_torquesResponse_(const ContainerAllocator& _alloc)
  {
  }


  typedef boost::shared_ptr< ::rokon_commander::set_jnt_torquesResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::rokon_commander::set_jnt_torquesResponse_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct set_jnt_torquesResponse
typedef  ::rokon_commander::set_jnt_torquesResponse_<std::allocator<void> > set_jnt_torquesResponse;

typedef boost::shared_ptr< ::rokon_commander::set_jnt_torquesResponse> set_jnt_torquesResponsePtr;
typedef boost::shared_ptr< ::rokon_commander::set_jnt_torquesResponse const> set_jnt_torquesResponseConstPtr;


struct set_jnt_torques
{

typedef set_jnt_torquesRequest Request;
typedef set_jnt_torquesResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct set_jnt_torques
} // namespace rokon_commander

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::rokon_commander::set_jnt_torquesRequest_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::rokon_commander::set_jnt_torquesRequest_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::rokon_commander::set_jnt_torquesRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "c2feced015a891aeb6180725860b2934";
  }

  static const char* value(const  ::rokon_commander::set_jnt_torquesRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0xc2feced015a891aeULL;
  static const uint64_t static_value2 = 0xb6180725860b2934ULL;
};

template<class ContainerAllocator>
struct DataType< ::rokon_commander::set_jnt_torquesRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "rokon_commander/set_jnt_torquesRequest";
  }

  static const char* value(const  ::rokon_commander::set_jnt_torquesRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::rokon_commander::set_jnt_torquesRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "float64[7] torques\n\
\n\
";
  }

  static const char* value(const  ::rokon_commander::set_jnt_torquesRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::rokon_commander::set_jnt_torquesRequest_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::rokon_commander::set_jnt_torquesResponse_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::rokon_commander::set_jnt_torquesResponse_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::rokon_commander::set_jnt_torquesResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "d41d8cd98f00b204e9800998ecf8427e";
  }

  static const char* value(const  ::rokon_commander::set_jnt_torquesResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0xd41d8cd98f00b204ULL;
  static const uint64_t static_value2 = 0xe9800998ecf8427eULL;
};

template<class ContainerAllocator>
struct DataType< ::rokon_commander::set_jnt_torquesResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "rokon_commander/set_jnt_torquesResponse";
  }

  static const char* value(const  ::rokon_commander::set_jnt_torquesResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::rokon_commander::set_jnt_torquesResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "\n\
";
  }

  static const char* value(const  ::rokon_commander::set_jnt_torquesResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::rokon_commander::set_jnt_torquesResponse_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::rokon_commander::set_jnt_torquesRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.torques);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct set_jnt_torquesRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::rokon_commander::set_jnt_torquesResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct set_jnt_torquesResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<rokon_commander::set_jnt_torques> {
  static const char* value() 
  {
    return "c2feced015a891aeb6180725860b2934";
  }

  static const char* value(const rokon_commander::set_jnt_torques&) { return value(); } 
};

template<>
struct DataType<rokon_commander::set_jnt_torques> {
  static const char* value() 
  {
    return "rokon_commander/set_jnt_torques";
  }

  static const char* value(const rokon_commander::set_jnt_torques&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<rokon_commander::set_jnt_torquesRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "c2feced015a891aeb6180725860b2934";
  }

  static const char* value(const rokon_commander::set_jnt_torquesRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<rokon_commander::set_jnt_torquesRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "rokon_commander/set_jnt_torques";
  }

  static const char* value(const rokon_commander::set_jnt_torquesRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<rokon_commander::set_jnt_torquesResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "c2feced015a891aeb6180725860b2934";
  }

  static const char* value(const rokon_commander::set_jnt_torquesResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<rokon_commander::set_jnt_torquesResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "rokon_commander/set_jnt_torques";
  }

  static const char* value(const rokon_commander::set_jnt_torquesResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // ROKON_COMMANDER_SERVICE_SET_JNT_TORQUES_H

