/* Auto-generated by genmsg_cpp for file /home/intelligentrobotics/ws/orocos/KUKACommander/srv/move_to_jnt_pos.srv */
#ifndef KUKACOMMANDER_SERVICE_MOVE_TO_JNT_POS_H
#define KUKACOMMANDER_SERVICE_MOVE_TO_JNT_POS_H
#include <string>
#include <vector>
#include <map>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/time.h"

#include "ros/macros.h"

#include "ros/assert.h"

#include "ros/service_traits.h"




namespace KUKACommander
{
template <class ContainerAllocator>
struct move_to_jnt_posRequest_ {
  typedef move_to_jnt_posRequest_<ContainerAllocator> Type;

  move_to_jnt_posRequest_()
  : position()
  , time(0.0)
  {
    position.assign(0.0);
  }

  move_to_jnt_posRequest_(const ContainerAllocator& _alloc)
  : position()
  , time(0.0)
  {
    position.assign(0.0);
  }

  typedef boost::array<double, 7>  _position_type;
  boost::array<double, 7>  position;

  typedef double _time_type;
  double time;


  typedef boost::shared_ptr< ::KUKACommander::move_to_jnt_posRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::KUKACommander::move_to_jnt_posRequest_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct move_to_jnt_posRequest
typedef  ::KUKACommander::move_to_jnt_posRequest_<std::allocator<void> > move_to_jnt_posRequest;

typedef boost::shared_ptr< ::KUKACommander::move_to_jnt_posRequest> move_to_jnt_posRequestPtr;
typedef boost::shared_ptr< ::KUKACommander::move_to_jnt_posRequest const> move_to_jnt_posRequestConstPtr;



template <class ContainerAllocator>
struct move_to_jnt_posResponse_ {
  typedef move_to_jnt_posResponse_<ContainerAllocator> Type;

  move_to_jnt_posResponse_()
  : success(false)
  {
  }

  move_to_jnt_posResponse_(const ContainerAllocator& _alloc)
  : success(false)
  {
  }

  typedef uint8_t _success_type;
  uint8_t success;


  typedef boost::shared_ptr< ::KUKACommander::move_to_jnt_posResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::KUKACommander::move_to_jnt_posResponse_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct move_to_jnt_posResponse
typedef  ::KUKACommander::move_to_jnt_posResponse_<std::allocator<void> > move_to_jnt_posResponse;

typedef boost::shared_ptr< ::KUKACommander::move_to_jnt_posResponse> move_to_jnt_posResponsePtr;
typedef boost::shared_ptr< ::KUKACommander::move_to_jnt_posResponse const> move_to_jnt_posResponseConstPtr;


struct move_to_jnt_pos
{

typedef move_to_jnt_posRequest Request;
typedef move_to_jnt_posResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct move_to_jnt_pos
} // namespace KUKACommander

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::KUKACommander::move_to_jnt_posRequest_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::KUKACommander::move_to_jnt_posRequest_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::KUKACommander::move_to_jnt_posRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "76cf5f582f7bb8272bc0b744b891358a";
  }

  static const char* value(const  ::KUKACommander::move_to_jnt_posRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x76cf5f582f7bb827ULL;
  static const uint64_t static_value2 = 0x2bc0b744b891358aULL;
};

template<class ContainerAllocator>
struct DataType< ::KUKACommander::move_to_jnt_posRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "KUKACommander/move_to_jnt_posRequest";
  }

  static const char* value(const  ::KUKACommander::move_to_jnt_posRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::KUKACommander::move_to_jnt_posRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "float64[7] position\n\
float64 time\n\
\n\
";
  }

  static const char* value(const  ::KUKACommander::move_to_jnt_posRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::KUKACommander::move_to_jnt_posRequest_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::KUKACommander::move_to_jnt_posResponse_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::KUKACommander::move_to_jnt_posResponse_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::KUKACommander::move_to_jnt_posResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "358e233cde0c8a8bcfea4ce193f8fc15";
  }

  static const char* value(const  ::KUKACommander::move_to_jnt_posResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x358e233cde0c8a8bULL;
  static const uint64_t static_value2 = 0xcfea4ce193f8fc15ULL;
};

template<class ContainerAllocator>
struct DataType< ::KUKACommander::move_to_jnt_posResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "KUKACommander/move_to_jnt_posResponse";
  }

  static const char* value(const  ::KUKACommander::move_to_jnt_posResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::KUKACommander::move_to_jnt_posResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "bool success\n\
\n\
";
  }

  static const char* value(const  ::KUKACommander::move_to_jnt_posResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::KUKACommander::move_to_jnt_posResponse_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::KUKACommander::move_to_jnt_posRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.position);
    stream.next(m.time);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct move_to_jnt_posRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::KUKACommander::move_to_jnt_posResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.success);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct move_to_jnt_posResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<KUKACommander::move_to_jnt_pos> {
  static const char* value() 
  {
    return "fb7d8862779c7c886d42a9e27e522fc7";
  }

  static const char* value(const KUKACommander::move_to_jnt_pos&) { return value(); } 
};

template<>
struct DataType<KUKACommander::move_to_jnt_pos> {
  static const char* value() 
  {
    return "KUKACommander/move_to_jnt_pos";
  }

  static const char* value(const KUKACommander::move_to_jnt_pos&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<KUKACommander::move_to_jnt_posRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "fb7d8862779c7c886d42a9e27e522fc7";
  }

  static const char* value(const KUKACommander::move_to_jnt_posRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<KUKACommander::move_to_jnt_posRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "KUKACommander/move_to_jnt_pos";
  }

  static const char* value(const KUKACommander::move_to_jnt_posRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<KUKACommander::move_to_jnt_posResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "fb7d8862779c7c886d42a9e27e522fc7";
  }

  static const char* value(const KUKACommander::move_to_jnt_posResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<KUKACommander::move_to_jnt_posResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "KUKACommander/move_to_jnt_pos";
  }

  static const char* value(const KUKACommander::move_to_jnt_posResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // KUKACOMMANDER_SERVICE_MOVE_TO_JNT_POS_H

