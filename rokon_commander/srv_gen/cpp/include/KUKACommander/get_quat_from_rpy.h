/* Auto-generated by genmsg_cpp for file /home/intelligentrobotics/ws/orocos/KUKACommander/srv/get_quat_from_rpy.srv */
#ifndef KUKACOMMANDER_SERVICE_GET_QUAT_FROM_RPY_H
#define KUKACOMMANDER_SERVICE_GET_QUAT_FROM_RPY_H
#include <string>
#include <vector>
#include <map>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/time.h"

#include "ros/macros.h"

#include "ros/assert.h"

#include "ros/service_traits.h"



#include "geometry_msgs/Quaternion.h"

namespace KUKACommander
{
template <class ContainerAllocator>
struct get_quat_from_rpyRequest_ {
  typedef get_quat_from_rpyRequest_<ContainerAllocator> Type;

  get_quat_from_rpyRequest_()
  : r(0.0)
  , p(0.0)
  , y(0.0)
  {
  }

  get_quat_from_rpyRequest_(const ContainerAllocator& _alloc)
  : r(0.0)
  , p(0.0)
  , y(0.0)
  {
  }

  typedef double _r_type;
  double r;

  typedef double _p_type;
  double p;

  typedef double _y_type;
  double y;


  typedef boost::shared_ptr< ::KUKACommander::get_quat_from_rpyRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::KUKACommander::get_quat_from_rpyRequest_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct get_quat_from_rpyRequest
typedef  ::KUKACommander::get_quat_from_rpyRequest_<std::allocator<void> > get_quat_from_rpyRequest;

typedef boost::shared_ptr< ::KUKACommander::get_quat_from_rpyRequest> get_quat_from_rpyRequestPtr;
typedef boost::shared_ptr< ::KUKACommander::get_quat_from_rpyRequest const> get_quat_from_rpyRequestConstPtr;



template <class ContainerAllocator>
struct get_quat_from_rpyResponse_ {
  typedef get_quat_from_rpyResponse_<ContainerAllocator> Type;

  get_quat_from_rpyResponse_()
  : quaternion()
  {
  }

  get_quat_from_rpyResponse_(const ContainerAllocator& _alloc)
  : quaternion(_alloc)
  {
  }

  typedef  ::geometry_msgs::Quaternion_<ContainerAllocator>  _quaternion_type;
   ::geometry_msgs::Quaternion_<ContainerAllocator>  quaternion;


  typedef boost::shared_ptr< ::KUKACommander::get_quat_from_rpyResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::KUKACommander::get_quat_from_rpyResponse_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct get_quat_from_rpyResponse
typedef  ::KUKACommander::get_quat_from_rpyResponse_<std::allocator<void> > get_quat_from_rpyResponse;

typedef boost::shared_ptr< ::KUKACommander::get_quat_from_rpyResponse> get_quat_from_rpyResponsePtr;
typedef boost::shared_ptr< ::KUKACommander::get_quat_from_rpyResponse const> get_quat_from_rpyResponseConstPtr;


struct get_quat_from_rpy
{

typedef get_quat_from_rpyRequest Request;
typedef get_quat_from_rpyResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct get_quat_from_rpy
} // namespace KUKACommander

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::KUKACommander::get_quat_from_rpyRequest_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::KUKACommander::get_quat_from_rpyRequest_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::KUKACommander::get_quat_from_rpyRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "c5585e6b09b13f56ed964334fed50470";
  }

  static const char* value(const  ::KUKACommander::get_quat_from_rpyRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0xc5585e6b09b13f56ULL;
  static const uint64_t static_value2 = 0xed964334fed50470ULL;
};

template<class ContainerAllocator>
struct DataType< ::KUKACommander::get_quat_from_rpyRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "KUKACommander/get_quat_from_rpyRequest";
  }

  static const char* value(const  ::KUKACommander::get_quat_from_rpyRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::KUKACommander::get_quat_from_rpyRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "float64 r\n\
float64 p\n\
float64 y\n\
\n\
";
  }

  static const char* value(const  ::KUKACommander::get_quat_from_rpyRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::KUKACommander::get_quat_from_rpyRequest_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::KUKACommander::get_quat_from_rpyResponse_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::KUKACommander::get_quat_from_rpyResponse_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::KUKACommander::get_quat_from_rpyResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "c3d2506862045c1ddfbe5c9ef23688f4";
  }

  static const char* value(const  ::KUKACommander::get_quat_from_rpyResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0xc3d2506862045c1dULL;
  static const uint64_t static_value2 = 0xdfbe5c9ef23688f4ULL;
};

template<class ContainerAllocator>
struct DataType< ::KUKACommander::get_quat_from_rpyResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "KUKACommander/get_quat_from_rpyResponse";
  }

  static const char* value(const  ::KUKACommander::get_quat_from_rpyResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::KUKACommander::get_quat_from_rpyResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "geometry_msgs/Quaternion quaternion\n\
\n\
================================================================================\n\
MSG: geometry_msgs/Quaternion\n\
# This represents an orientation in free space in quaternion form.\n\
\n\
float64 x\n\
float64 y\n\
float64 z\n\
float64 w\n\
\n\
";
  }

  static const char* value(const  ::KUKACommander::get_quat_from_rpyResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::KUKACommander::get_quat_from_rpyResponse_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::KUKACommander::get_quat_from_rpyRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.r);
    stream.next(m.p);
    stream.next(m.y);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct get_quat_from_rpyRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::KUKACommander::get_quat_from_rpyResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.quaternion);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct get_quat_from_rpyResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<KUKACommander::get_quat_from_rpy> {
  static const char* value() 
  {
    return "22f0489bd951954682c7b0d3a160592e";
  }

  static const char* value(const KUKACommander::get_quat_from_rpy&) { return value(); } 
};

template<>
struct DataType<KUKACommander::get_quat_from_rpy> {
  static const char* value() 
  {
    return "KUKACommander/get_quat_from_rpy";
  }

  static const char* value(const KUKACommander::get_quat_from_rpy&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<KUKACommander::get_quat_from_rpyRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "22f0489bd951954682c7b0d3a160592e";
  }

  static const char* value(const KUKACommander::get_quat_from_rpyRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<KUKACommander::get_quat_from_rpyRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "KUKACommander/get_quat_from_rpy";
  }

  static const char* value(const KUKACommander::get_quat_from_rpyRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<KUKACommander::get_quat_from_rpyResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "22f0489bd951954682c7b0d3a160592e";
  }

  static const char* value(const KUKACommander::get_quat_from_rpyResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<KUKACommander::get_quat_from_rpyResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "KUKACommander/get_quat_from_rpy";
  }

  static const char* value(const KUKACommander::get_quat_from_rpyResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // KUKACOMMANDER_SERVICE_GET_QUAT_FROM_RPY_H

